# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:37:00+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class Area(BaseModel):
    AreaId: Optional[int] = None
    CountryCode: Optional[str] = None
    Name: Optional[str] = None


class Game(BaseModel):
    BestOf: Optional[str] = None
    DateTime: Optional[str] = None
    Day: Optional[str] = None
    DrawMoneyLine: Optional[int] = None
    GameId: Optional[int] = None
    Group: Optional[str] = None
    IsClosed: Optional[bool] = None
    PointSpread: Optional[float] = None
    RoundId: Optional[int] = None
    Season: Optional[int] = None
    SeasonType: Optional[int] = None
    Status: Optional[str] = None
    TeamAId: Optional[int] = None
    TeamAKey: Optional[str] = None
    TeamAMoneyLine: Optional[int] = None
    TeamAName: Optional[str] = None
    TeamAPointSpreadPayout: Optional[int] = None
    TeamAScore: Optional[int] = None
    TeamBId: Optional[int] = None
    TeamBKey: Optional[str] = None
    TeamBMoneyLine: Optional[int] = None
    TeamBName: Optional[str] = None
    TeamBPointSpreadPayout: Optional[int] = None
    TeamBScore: Optional[int] = None
    Updated: Optional[str] = None
    UpdatedUtc: Optional[str] = None
    VenueId: Optional[int] = None
    VenueType: Optional[str] = None
    Week: Optional[int] = None
    Winner: Optional[str] = None


class Membership(BaseModel):
    Active: Optional[bool] = None
    EndDate: Optional[str] = None
    MembershipId: Optional[int] = None
    PlayerId: Optional[int] = None
    PlayerName: Optional[str] = None
    StartDate: Optional[str] = None
    TeamArea: Optional[str] = None
    TeamId: Optional[int] = None
    TeamName: Optional[str] = None
    Updated: Optional[str] = None


class Player(BaseModel):
    BirthCity: Optional[str] = None
    BirthCountry: Optional[str] = None
    BirthDate: Optional[str] = None
    CommonName: Optional[str] = None
    FirstName: Optional[str] = None
    Gender: Optional[str] = None
    LastName: Optional[str] = None
    MatchName: Optional[str] = None
    Nationality: Optional[str] = None
    PlayerId: Optional[int] = None
    Position: Optional[str] = None
    Updated: Optional[str] = None


class Round(BaseModel):
    CurrentRound: Optional[bool] = None
    CurrentWeek: Optional[int] = None
    EndDate: Optional[str] = None
    Name: Optional[str] = None
    RoundId: Optional[int] = None
    Season: Optional[int] = None
    SeasonId: Optional[int] = None
    SeasonType: Optional[int] = None
    StartDate: Optional[str] = None
    Type: Optional[str] = None


class Season(BaseModel):
    CompetitionId: Optional[int] = None
    CompetitionName: Optional[str] = None
    CurrentSeason: Optional[bool] = None
    EndDate: Optional[str] = None
    Name: Optional[str] = None
    Rounds: Optional[List[Round]] = None
    Season: Optional[int] = None
    SeasonId: Optional[int] = None
    StartDate: Optional[str] = None


class Standing(BaseModel):
    Games: Optional[int] = None
    Group: Optional[str] = None
    Losses: Optional[int] = None
    Name: Optional[str] = None
    Order: Optional[int] = None
    Points: Optional[int] = None
    RoundId: Optional[int] = None
    ScoreAgainst: Optional[int] = None
    ScoreDifference: Optional[int] = None
    ScoreFor: Optional[int] = None
    StandingId: Optional[int] = None
    TeamId: Optional[int] = None
    Wins: Optional[int] = None


class Team(BaseModel):
    Active: Optional[bool] = None
    AreaId: Optional[int] = None
    AreaName: Optional[str] = None
    Email: Optional[str] = None
    Facebook: Optional[str] = None
    Founded: Optional[int] = None
    Gender: Optional[str] = None
    Instagram: Optional[str] = None
    Key: Optional[str] = None
    Name: Optional[str] = None
    PrimaryColor: Optional[str] = None
    QuaternaryColor: Optional[str] = None
    SecondaryColor: Optional[str] = None
    ShortName: Optional[str] = None
    TeamId: Optional[int] = None
    TertiaryColor: Optional[str] = None
    Twitter: Optional[str] = None
    Type: Optional[str] = None
    Website: Optional[str] = None
    YouTube: Optional[str] = None


class TeamDetail(BaseModel):
    Active: Optional[bool] = None
    AreaId: Optional[int] = None
    AreaName: Optional[str] = None
    Email: Optional[str] = None
    Facebook: Optional[str] = None
    Founded: Optional[int] = None
    Gender: Optional[str] = None
    Instagram: Optional[str] = None
    Key: Optional[str] = None
    Name: Optional[str] = None
    Players: Optional[List[Player]] = None
    PrimaryColor: Optional[str] = None
    QuaternaryColor: Optional[str] = None
    SecondaryColor: Optional[str] = None
    ShortName: Optional[str] = None
    TeamId: Optional[int] = None
    TertiaryColor: Optional[str] = None
    Twitter: Optional[str] = None
    Type: Optional[str] = None
    Website: Optional[str] = None
    YouTube: Optional[str] = None


class Venue(BaseModel):
    Address: Optional[str] = None
    Capacity: Optional[int] = None
    City: Optional[str] = None
    Country: Optional[str] = None
    GeoLat: Optional[float] = None
    GeoLong: Optional[float] = None
    Name: Optional[str] = None
    Nickname1: Optional[str] = None
    Nickname2: Optional[str] = None
    Open: Optional[bool] = None
    Opened: Optional[int] = None
    VenueId: Optional[int] = None
    Zip: Optional[str] = None


class FieldFormatActiveMembershipsGetResponse(RootModel[List[Membership]]):
    root: List[Membership]


class Format(Enum):
    xml = 'xml'
    json = 'json'


class FieldFormatAreasGetResponse(RootModel[List[Area]]):
    root: List[Area]


class FieldFormatGamesByDateDateGetResponse(RootModel[List[Game]]):
    root: List[Game]


class FieldFormatHistoricalMembershipsGetResponse(RootModel[List[Membership]]):
    root: List[Membership]


class FieldFormatHistoricalMembershipsByTeamTeamidGetResponse(
    RootModel[List[Membership]]
):
    root: List[Membership]


class FieldFormatMembershipsByTeamTeamidGetResponse(RootModel[List[Membership]]):
    root: List[Membership]


class FieldFormatPlayersGetResponse(RootModel[List[Player]]):
    root: List[Player]


class FieldFormatPlayersByTeamTeamidGetResponse(RootModel[List[Player]]):
    root: List[Player]


class FieldFormatScheduleRoundidGetResponse(RootModel[List[Game]]):
    root: List[Game]


class FieldFormatStandingsRoundidGetResponse(RootModel[List[Standing]]):
    root: List[Standing]


class FieldFormatTeamsGetResponse(RootModel[List[Team]]):
    root: List[Team]


class FieldFormatVenuesGetResponse(RootModel[List[Venue]]):
    root: List[Venue]


class Competition(BaseModel):
    AreaId: Optional[int] = None
    AreaName: Optional[str] = None
    CompetitionId: Optional[int] = None
    Format: Optional[str] = None
    Gender: Optional[str] = None
    Name: Optional[str] = None
    PlayerStatsCoverage: Optional[bool] = None
    Seasons: Optional[List[Season]] = None
    Type: Optional[str] = None


class CompetitionDetail(BaseModel):
    AreaId: Optional[int] = None
    AreaName: Optional[str] = None
    CompetitionId: Optional[int] = None
    CurrentSeason: Optional[Season] = None
    Format: Optional[str] = None
    Games: Optional[List[Game]] = None
    Gender: Optional[str] = None
    Name: Optional[str] = None
    PlayerStatsCoverage: Optional[bool] = None
    Seasons: Optional[List[Season]] = None
    Teams: Optional[List[TeamDetail]] = None
    Type: Optional[str] = None


class SeasonTeam(BaseModel):
    Active: Optional[bool] = None
    Gender: Optional[str] = None
    SeasonId: Optional[int] = None
    SeasonTeamId: Optional[int] = None
    Team_1: Optional[Team] = Field(None, alias='Team')
    TeamId: Optional[int] = None
    TeamName: Optional[str] = None
    Type: Optional[str] = None


class FieldFormatCompetitionsGetResponse(RootModel[List[Competition]]):
    root: List[Competition]


class FieldFormatSeasonTeamsSeasonidGetResponse(RootModel[List[SeasonTeam]]):
    root: List[SeasonTeam]
